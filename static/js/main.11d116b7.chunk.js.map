{"version":3,"sources":["App.js","index.js"],"names":["App","arr","useState","input","setInput","list","setList","edit","setEdit","index","setIndex","add","splice","id","placeholder","value","onChange","e","target","onClick","map","item","idx","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iMAIe,SAASA,IACtB,IAKIC,EALJ,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KAGA,SAASC,IACHJ,IACFN,EAAMI,GACFO,OAAOH,EAAO,EAAGN,GACrBG,EAAQ,YAAIL,IACZO,GAAQ,GACRJ,EAAS,MAETE,EAAQ,GAAD,mBAAKD,GAAL,CAAWF,KAClBC,EAAS,KAIb,OACE,qCACE,sBAAKS,GAAG,UAAR,UACE,8CAEA,uBACEC,YAAY,WACZC,MAAOZ,EACPa,SAAU,SAACC,GACTb,EAASa,EAAEC,OAAOH,UAIrBR,EACC,qCACE,wBACEY,QAAS,WACHhB,GACFQ,KAHN,kBASA,wBACEQ,QAAS,WACPf,EAAS,IACTI,GAAQ,IAHZ,uBAUF,wBACEW,QAAS,WACHhB,GACFQ,KAHN,iBAUF,wDAEF,qBAAKE,GAAG,OAAR,SACE,6BACGR,EAAKe,KAAI,SAACC,EAAMC,GACf,OACE,+BACGD,EACD,uBACA,wBACEF,QAAS,YACPlB,EAAMI,GACFO,OAAOU,EAAK,GAChBhB,EAAQ,YAAIL,KAJhB,oBASA,wBACEkB,QAAS,SAACF,GAERT,GAAQ,GACRJ,EAASC,EAAKiB,IACdZ,EAASY,IALb,+BCjFhB,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC3B,EAAD,MAEFuB,K","file":"static/js/main.11d116b7.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [input, setInput] = useState();\n  const [list, setList] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [index, setIndex] = useState();\n\n  var arr;\n  function add() {\n    if (edit) {\n      arr = list;\n      arr.splice(index, 1, input);\n      setList([...arr]);\n      setEdit(false);\n      setInput(\"\");\n    } else {\n      setList([...list, input]);\n      setInput(\"\");\n    }\n  }\n\n  return (\n    <>\n      <div id=\"heading\">\n        <h1> To-Do List </h1>\n\n        <input\n          placeholder=\"Add Todo\"\n          value={input}\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n\n        {edit ? (\n          <>\n            <button\n              onClick={() => {\n                if (input) {\n                  add();\n                }\n              }}\n            >\n              Save\n            </button>\n            <button\n              onClick={() => {\n                setInput(\"\");\n                setEdit(false);\n              }}\n            >\n              Cancel\n            </button>\n          </>\n        ) : (\n          <button\n            onClick={() => {\n              if (input) {\n                add();\n              }\n            }}\n          >\n            Add\n          </button>\n        )}\n        <h6>By Jivan Bhamburkar</h6>\n      </div>\n      <div id=\"body\">\n        <ul>\n          {list.map((item, idx) => {\n            return (\n              <li>\n                {item}\n                <br />\n                <button\n                  onClick={() => {\n                    arr = list;\n                    arr.splice(idx, 1);\n                    setList([...arr]);\n                  }}\n                >\n                  Delete\n                </button>\n                <button\n                  onClick={(e) => {\n                    // e.target.backgroundColor = \"red\";\n                    setEdit(true);\n                    setInput(list[idx]);\n                    setIndex(idx);\n                    // add(index);\n                  }}\n                >\n                  Edit\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}